# name: Deploy

# on:
#   push:
#     branches:
#       - deploy-lara
#   workflow_dispatch:

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3

#       - name: Authenticate to GCP
#         uses: google-github-actions/auth@v1
#         with:
#           credentials: ${{ secrets.GCP_SA_KEY }}

#       - name: set up docker buildx
#         uses: docker/setup-buildx-action@v2

#       -name: build docker image


#       - name: Configure Docker to use GCR
#         run: gcloud auth configure-docker

#       - name: Build and push Docker image
#         run: |
#           docker build -t gcr.io/$PROJECT_ID/lara-backend:$GITHUB_SHA .
#           docker push gcr.io/$PROJECT_ID/lara-backend:$GITHUB_SHA
#           gcloud run deploy day15 --image gcr.io/student-sandbox-project/day15 --platform managed


#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '19' # Use your preferred Node version

#       - name: Check the current directory
#         run: pwd 

#       - name: List the files in the current directory
#         run: ls

#       - name: Navigate to project directory
#         run: cd backend
      
#       - name: Install dependencies
#         run: |
#           ls
#           pwd
#           cd backend
#           pwd
#           npm install

#       - name: Start the server (if applicable)
#         run: |
#           cd backend
#           npm start &
#         env:
#           DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
#           DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
#           DATABASE_DATABASE: ${{ secrets.DATABASE_DATABASE }}
#           DATABASE_USER: ${{ secrets.DATABASE_USER }}
#           DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
#           nodemailer_email: ${{ secrets.nodemailer_email }}
#           nodemailer_password: ${{ secrets.nodemailer_password }}
#           PORT: ${{ secrets.PORT  }}
#           JWT_SECRET: ${{ secrets.JWT_SECRET }} }}


#       - name: Wait for server to be ready
#         run: sleep 10

     
     


name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: backend/.
          push: false
          tags: fullstack-lara:latest
          platforms: linux/amd64
      
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@main
        with:
          service: fullstack-lara
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/fullstack-lara:latest
          region: europe-west1
          platform: managed

      - name: Allow unauthenticated access
        run: |
          gcloud run services add-iam-policy-binding fullstack-lara \
            --member="allUsers" \
            --role="roles/run.invoker" \
            --region=europe-west1 \
            --platform=managed

      - name: Wait for server to be ready
        run: sleep 10

      - name: Install dependencies for frontend
        run: |
          cd frontend
          npm install --legacy-peer-deps
          
      - name: Run Lint
        run: |
          cd frontend
          npm run lint
 
      - name: Build Next.js app
        run: |
          cd frontend
          npm run build --legacy-peer-deps

      - name: Install specific vercel version
        run: npm install -g vercel@39.0.5
 
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd frontend
          npx vercel deploy --prod --token $VERCEL_TOKEN --confirm

      # - name: Install dependencies
      #   run: |
      #     cd frontend
      #     npm install --force

      # - name: Run Lint
      #   run:  |
      #     cd frontend
      #     npm run lint

      # - name: Build Next.js app
      #   run:  |
      #     cd frontend
      #     npm run build

      # - name: Deploy to Vercel
      #   env:
      #     VERCEL_TOKEN: ${{ secrets.LARA_VERCEL_TOKEN }}
      #   run: |
      #     cd frontend
      #     npx vercel deploy --prod --token $VERCEL_TOKEN --confirm 


      # - name: Check server health
      #   run: curl http://localhost:3000